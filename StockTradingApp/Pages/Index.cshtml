@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}
@Html.AntiForgeryToken() @*Added anti-forgery token for ajax call*@
<div class="container w-100 text-center">
    <div class="row w-50 mx-auto">
        <div class="col ml-4">
            <label for="Tickers" class="form-label">Tickers</label>
            <input class="form-control" autocomplete="on" list="TickerData" id="Tickers" placeholder="Type to search..." />
            <datalist id="TickerData">
                @foreach (var item in Model.SupportedTickers)
                {
                    <option value="@item"></option>
                }
            </datalist>
        </div>
    </div>
    <div class="container mt-2 text-center">
        <div class="row">
            <div class="col-md-3 container h-100 border-end border-bottom ">
                <div class="row">
                    <div class="col border-bottom pb-4 mb-2">
                        <label for="inputmoney" class="form-label mt-4 ">Amnt to invest</label>
                        <input type="number" id="inputmoney" value="" class="form-control w-50 mx-auto" placeholder="" />

                        <button style="display:inline-block" onclick="onButtonClickStart()" id="btnStart" class=" btn btn-info btn-sm m-2 mt-4">Start</button>
                        <button style="display:none" onclick="onButtonClickQuit()" id="btnQuit" class="btn btn-sm btn-danger m-2 mt-4">Quit</button>
                        <button style="display:none" onclick="onButtonClickBuy()" id="btnBuy" class="btn btn-primary btn-sm m-2 mt-4">Buy</button>
                        <button style="display:none" onclick="onButtonClickSell()" id="btnSell" class="btn btn-sm btn-success m-2 mt-4">Sell</button>
                        <button style="display:none" onclick="onButtonClickHold()" id="btnHold" class="btn btn-sm btn-warning m-2 mt-4">Hold</button>
                        <div class="mt-4 mx-auto">
                            <hr class="mt-2" />
                            <span>
                                Current Balance
                            </span>
                            <span id="dollars">
                                $@Model.balance
                            </span>
                        </div>
                    </div>
                </div>
                <div class="row container w-100 pt-2 h-100 mb-4">
                    <h5>Stocks Owned:</h5>
                    <div class="container" id="stocksOwned"></div>
                </div>
            </div>
            <div class="col-md-10 w-75 h-100" id="amnt"></div>
        </div>
    </div>
</div>




@section Scripts
    {
    <script>

        function onButtonClickStart() {

            var start = document.getElementById("btnStart");

            var buy = document.getElementById("btnBuy");
            var sell = document.getElementById("btnSell");
            var hold = document.getElementById("btnHold");
            var quit = document.getElementById("btnQuit");

            if (start.style.display === "inline-block") {
                // turn off star button, then turn on quit and all the other buttons //
                start.style.display = "none";
                quit.style.display = "inline-block";
                start.innerHTML = "Quit";
                buy.style.display = "inline-block";
                sell.style.display = "inline-block";
                hold.style.display = "inline-block";
            }
        }

        function onButtonClickQuit() {
            document.getElementById("testFunction").innerHTML = "QUIT BUTTON";
        }

        function onButtonClickBuy() {
            var amnt = $('#inputmoney').val()
            var ticker = $('#Tickers').val()
            if (amnt < 0 || amnt == null || amnt == undefined || amnt == "") {
                $('#inputmoney').addClass('border')
                $('#inputmoney').addClass('border-danger')
                $('#inputmoney').attr("placeholder", "How much??")
            }
            else if (ticker == null || ticker == undefined || ticker == "") {
                $('#Tickers').addClass('border')
                $('#Tickers').addClass('border-danger')
                $('#Tickers').attr("placeholder", "Pick a stock to buy or Investigate!")


            }
            else {
                $('#inputmoney').removeClass('border')
                $('#inputmoney').removeClass('border-danger')
                $('#inputmoney').removeAttr("placeholder")
                $('#Tickers').removeClass('border')
                $('#Tickers').removeClass('border-danger')
                $('#Tickers').removeAttr("placeholder")
                const data = { 'amnt': amnt, 'ticker': ticker }
                $.ajax
                    ({
                        type: "POST",
                        url: "./Index?handler=MinusFunds",
                        beforeSend: (xhr) => {
                            xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());

                        },
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json',
                        data: JSON.stringify(data),
                        success: (response) => {
                            dollars = parseInt(parseInt(response) / 100);
                            cents = parseInt(response) % 100;
                            $('#dollars').text(`\$${dollars}.${cents}`)
                            $('#stocksOwned').append(`<div>${ticker} : \$${amnt}  </div>`)

                            $('#inputmoney').val("")
                        }

                    })




            }
        }

        function onButtonClickSell() {
            document.getElementById("testFunction").innerHTML = "SELL BUTTON";
        }

        function onButtonClickHold() {
            document.getElementById("testFunction").innerHTML = "HOLD BUTTON";

        }





        $('#dollars').click(function() {
            var amnt = 525;
            //proof of concept::::::
            $.ajax
                ({
                    type: "POST",
                    url: "./Index?handler=MinusFunds",
                    beforeSend: (xhr) => {
                        xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    data: JSON.stringify(amnt, 'amnt'),
                    success: (response) => {
                        dollars = parseInt(parseInt(response) / 100);
                        cents = parseInt(response) % 100;
                        $('#dollars').text(`\$${dollars}.${cents}`)

                    }
                })
        });


        var plotData = [];
        $('#Tickers').change(function() {
            var msg = $(this).val()

            $.ajax
                ({
                    type: "POST",
                    url: "./Index?handler=GetTickerData",
                    beforeSend: (xhr) => {
                        xhr.setRequestHeader("XSRF-TOKEN", $('input:hidden[name="__RequestVerificationToken"]').val());

                    },
                    contentType: "application/json; charset=utf-8",
                    dataType: 'json',
                    data: JSON.stringify(msg, 'ticker'),
                    success: (message) => {
                        plotData = message
                        displayGraph(plotData)
                    }


                })
        });

        displayGraph = (data) => {
            var xx = []
            for (var i of data) {
                xx.push(i.date)
            }
            var yy = []
            console.log(data)
            for (var i of data) {
                yy.push(i['open'])
            }
            console.log(xx)

            var trace1 = {
                x: xx,
                y: yy,
                type: 'scatter',
                mode: 'lines',

            };
            var data = [trace1]

            var layout = {
                xaxis: {
                    type: 'date',
                    title: 'Dates'
                },
                yaxis: {
                    title: 'Daily Open Price'
                }
            }

            Plotly.newPlot('amnt', data, layout, {dragmode:'select', pad:'2', autosize:true, scrollZoom: true, displayModeBar: false, clickmode: 'select' });
        }
    </script>
}
